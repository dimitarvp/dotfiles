source ~/.zsh/p10k.zsh
source ~/.zsh/ohmyzsh.zsh
source ~/.zsh/zsh.zsh # always put history opts after `oh-my-zsh` init or it will override this file.
source ~/.zsh/zplug.zsh
source ~/.zsh/autocomplete.zsh
source ~/.zsh/aliases.zsh
source ~/.zsh/gnu.zsh

source ~/.zsh/erlang.zsh
source ~/.zsh/elixir.zsh
source ~/.zsh/java.zsh
source ~/.zsh/golang.zsh
source ~/.zsh/rust.zsh
source ~/.zsh/ocaml.zsh
source ~/.zsh/ruby.zsh
source ~/.zsh/python.zsh

source ~/.zsh/paths.zsh
source ~/.zsh/package_managers.zsh

source ~/.zsh/fuzzy_finders/fzf.zsh
source ~/.zsh/fuzzy_finders/fzf_tab.zsh
source ~/.zsh/fuzzy_finders/peco.zsh
source ~/.zsh/fuzzy_finders/skim.zsh
source ~/.zsh/fuzzy_finders/fzy.zsh

source ~/.zsh/programs/docker.zsh
source ~/.zsh/programs/emacs.zsh
source ~/.zsh/programs/git.zsh

# PSPG default command line options
export PSPG="--style 16 --force-uniborder --bold-labels --highlight-odd-rec --border 2 --no-sound"

# Tabulator shell scripts.
export PATH="$PATH:$HOME/bin/tabulator/bin"

# YTFZF: Specify cache directory.
YTFZF_CACHE=~/.cache/ytfzf

# YTFZF: Always choose best video and audio qualities.
export YTFZF_PREF="bestvideo[height<=?1080]+bestaudio/best"

# Decode JTW tokens on the command line.
jwtd() {
    if [[ -x $(command -v jq) ]]; then
        jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
        echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
    fi
}

# direnv hook; must always be the last in the config.
eval "$(direnv hook zsh)"

. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

source /Users/dimi/Library/Preferences/org.dystroy.broot/launcher/bash/br

ulimit -n 98304

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

fpath+=${ZDOTDIR:-$HOME}/.zsh_functions

# Setup variables and scripts for local backup.
source $HOME/scripts/dimi_backup_setup

# Uncomment this to enable `fzf` completion when pressing TAB.
export ZSH_AUTOSUGGEST_STRATEGY=(history completion)

function lll {
  cd "$(llama "$@")"
}

export NVIM_LSP_LOG=$HOME/.cache/nvim/lsp.log
export LVIM_LSP_LOG=$HOME/.cache/lvim/lsp.log

# https://github.com/tversteeg/emplace
eval "$(emplace init zsh)"
